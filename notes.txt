Preparation:
1. Add sass package, using "yarn add sass" or "npm install sass"
2. Create MongoDB Atlas Cluster, and create .env file to hold MongoDB parameters
3. Add mongodb and mongoose package
4. Test connection with mongodb with test file
5. Setup Redux toolkit, add package redux, react-redux, @reduxjs/toolkit, next-redux-wrapper, redux-thunk, redux-persist, redux-devtools-extension
6. Global variable in next config

Part 1 : Header Component
1. Add Header and ad/banner picture
2. Add react-icons package, add Top menu bar
3. Customizing menu bar part 1
4. Customizing menu bar part 2
5. Add search bar

Part 2 : Footer Component
1. Add Footer
2. Add Socials and Newsletter component to footer
3. Add Payment and Copyright component to footer
4. Making footer responsive

Additional detect user location using IPRegistry
1. Sign-up to https://ipregistry.io
2. After sign-up, collect the API Key
3. Add axios package to the app
4. Customize app for using IPRegistry API

Part 3 : Authentication
1. Seting Up using nextauth, add next-auth package
2. Add mongodb adapter package (@next-auth/mongodb-adapter) and for json web token (jwt), you can use password generator and use as jwt
3. Add github provider, you must have account in github and create OAuth for the app, in the "Authorization callback url" insert "http://localhost:3000/api/auth/callback/github"
4. Add google provider, you can access to google cloud console and create new project, and go to API and services menu and create new credential for oath client id, in the "Authorised redirect uri" insert "http://localhost:3000/api/auth/callback/google"
5. Customizing Top and User Menu component
6. Add twitter provider, go to twitter developer portal, create new app, and in the Callback URL" insert "http://localhost:3000/api/auth/callback/twitter". You'll got app id+secret and oath id+secret
7. Add auth0 provider, you must have auth0 account, and you can create new app, after that you can download all the credential you needed
8. Customizing sign-in page part 1
9. Customizing sign-in page part 2, add form using Formik and Yup
10. Customizing sign-in page part 3
11. Customizing sign-in page part 4, add submit button and error message
12. Customizing sign-in page part 5, add socials method of signin
13. Customizing sign-in page part 6, add sign-up container to the page
14. Sign-up process part 1, add next-connect package, create signup api and test it using postman
15. Sign-up process part 2, creating model for creating user in database
16. Sign-up process part 3, add bcrypt and jsonwebtoken package for managing password and validation token
17. Sign-up process part 4, add googleapis and nodemailer package for send email function for validation link, the function using gmail api (google developer api) and also need google api from google console
18. Sign-up process part 5, add sendmail function
19. Sign-up process part 6, create template email for validation using stripo
20. Sign-up process part 7, continuing configuring add user function
21. Sign-up process part 8, add react-spinners for loader function
22. Sign-up process part 9, add next-auth provider and submit function
23. Sign-up process part 10, dealing with callback
24. Sign-up process part 11, dealing with csrf token and wraping all

Part 4 : Forgot and Reset password
1. Creating Forgot Password page
2. Creating Forgot Password API and send mail function
3. Creating Reset Password page and generate token
4. Finalizing Reset Password API and all the function

Part 5 : Home page
1. Customize home page, designing container style for home page
2. Designing swiper component using swiper-js, add swiper package
3. Finalizing swiper component, add auto play
4. Customize offer component
5. Customize main menu component
6. Customize user component
7. Finalizing user component
8. Customize header component
9. Making main component on home page responsive
10. Designing flash deals component
11. Customize flash deals component, add swiper
12. Customize flash deals component, finalizing countdown, add dayjs package
13. Customize category card component, add react-responsive package for optimizing page in small device
14. Cutomize product swiper in home page

Part 6 : Product
1. Creating product model
2. Creating category model
3. Creating sub category model
4. Add and get products from database, import json file from folder data to database
